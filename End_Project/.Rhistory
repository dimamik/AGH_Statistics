m0 <- 5
U <- (mean(data) - m0) / s * sqrt(n)
# h0: m = 5
# h1: m = m1 > 5
# nie odrzucamy
# zbiór odrzuceń - od kwantyla
alpha = 0.025
zo <- qnorm(1-alpha)
m0 <- 5
U <- (mean(data) - m0) / s * sqrt(n)
# h0: m = 5
# h1: m = m1 < 5
pvalue <- 1 - pnorm(U)
?t.test
t.test(data)
t.test(data,alternative = "less")
t.test(data,alternative = "less")
t.test(data,alternative = "less")
t.test(data,alternative = "less",mu=2)
#Hello in Main Script
data_c = (read.csv("./insurance.csv", header = TRUE))
#Hello in Main Script
data_c = (read.csv("./insurance.csv", header = TRUE))
#Hello in Main Script
data_c = (read.csv("insurance.csv", header = TRUE))
data_c = (read.csv("./Wzrost_i_Waga.csv", header = TRUE))
data_c = (read.csv("./Wzrost_i_Waga.csv", header = TRUE))
#Median
median(wzrost)
data_c = (read.csv("./Wzrost_i_Waga.csv", header = TRUE))
#Srednia
mean(wzrost)
data_c = (read.csv("./Wzrost_i_Waga.csv", header = TRUE))
wzrost = data_c[,1]
#Wzrost
#Srednia
mean(wzrost)
#Median
median(wzrost)
#Odchylenie przecietne
avg.dev <- function(x) mean(abs(x - mean(x)))
c(avg.dev(wzrost))
# (minimum, lower-hinge, median, upper-hinge, maximum)
fivenum(wzrost)
# Histograma
hist(wzrost)
# Boxplot :)
boxplot(wzrost)
#Waga
waga = data_c[,2]
#Srednia
mean(waga)
#Median
median(waga)
#Odchylenie przecietne
avg.dev <- function(x) mean(abs(x - mean(x)))
c(avg.dev(waga))
# (minimum, lower-hinge, median, upper-hinge, maximum)
fivenum(waga)
# Histograma
hist(waga)
# Boxplot :)
boxplot(waga)
View(data)
#Hello in Main Script
data_c = (read.csv("./insurance.csv", header = TRUE))
source('D:/STUDIA_2020_2021/Statystyka/AGH_Statistics/End_Project/mainScript.R', echo=TRUE)
x<-5
#Hello in Main Script
data_c = (read.csv("./insurance.csv", header = TRUE))
#Hello in Main Script
data_c = (read.csv("https://raw.githubusercontent.com/dimamik/AGH_Statistics/master/End_Project/insurance.csv", header = TRUE))
age = data_c[,1]
age = data_c['age']
age = data_c['bmi']
mean(bmi)
source('D:/STUDIA_2020_2021/Statystyka/AGH_Statistics/End_Project/mainScript.R', echo=TRUE)
bmi = data_c['bmi']
mean(bmi)
bmi = data_c['bmi',1]
bmi = data_c[,1]
mean(bmi)
install.packages("packagename")
install.packages("packagename")
install.packages('GGaly')
install.packages('GGally')
library(GGally)
ggpairs(data, title="correlogram with ggpairs()")
# Reading data from .csv
data = (
read.csv(
"https://raw.githubusercontent.com/dimamik/AGH_Statistics/master/End_Project/insurance.csv",
header = TRUE
)
)
# Discovering data structure
View(data)
names(data)
str(data)
summary(data)
# --------------------------------------------
# Cleaning the data and writing to new file
# Also we don't want to have Smoker as Yes/No, but 1/0
data <- data %>%
mutate(smoker = ifelse(smoker == "no", 0, 1))
# It is better to use 0/1 <-> Male/Female
data <- data %>%
mutate(sex = ifelse(sex == "male", 0, 1))
# We don't need a region
drops <- c("region")
data<-data[,!(names
(data) %in% drops)]
# Check for Nulls in Data
if (anyNA(data)){
print("Data is not valid")
}else{
print("Data is valid")
}
# Writing to new csv file
current_working_dir <- dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(current_working_dir)
write.csv(data,"./out/data.csv",row.names = FALSE)
ggpairs(data, title="correlogram with ggpairs()")
# Describe numeric data by groups
pairs.panels(data[c("age","bmi", "children", "charges")])
library(rstudioapi)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(psych)
library(relaimpo)
library(GGally)
library(tidyverse)
library(hrbrthemes)
library(viridis)
# Describe numeric data by groups
pairs.panels(data[c("age","bmi", "children", "charges")])
ggpairs(data, title="correlogram with ggpairs()")
ggcorr(data, method = c("everything", "charges"))
ggcorr(data, method = c("everything", "pearson"))
ggpairs(flea, columns = 2:4, ggplot2::aes(colour=species))
data %>%
ggplot(data = insurance,aes(smoker,charges)) + geom_boxplot(fill = c(2:3)) +
theme_classic() + ggtitle("Charges by smoking")
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="black", size=0.4, alpha=0.9) +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("A boxplot with jitter") +
xlab("")
data %>%
ggplot(data = insurance,aes(smoker,charges))
theme_classic() + ggtitle("Charges by smoking")
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="black", size=0.4, alpha=0.9) +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("A boxplot with jitter") +
xlab("")
ggplot(data = insurance,aes(smoker,charges)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="black", size=0.4, alpha=0.9) +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("A boxplot with jitter") +
xlab("")
ggplot(data = data,aes(smoker,charges)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="black", size=0.4, alpha=0.9) +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("A boxplot with jitter") +
xlab("")
ggplot(data = data,aes(smoker,charges,fill=smoker)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="black", size=0.4, alpha=0.9) +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("A boxplot with jitter") +
xlab("")
# Watch Correlogram to find out that only smoking
# is highly-correlated with charges
ggpairs(data, title="correlogram with ggpairs()")
# Watch Correlogram to find out that only smoking
# is highly-correlated with charges
ggpairs(data, title="correlogram with ggpairs()")
ggplot(data = data,aes(smoker,charges,fill=smoker)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="black", size=0.4, alpha=0.9) +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("A boxplot with jitter") +
xlab("")
ggplot(data = data,aes(sex,charges,fill=sex)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="black", size=0.4, alpha=0.9) +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("A boxplot with jitter") +
xlab("")
ggplot(data = data,aes(sex,charges,fill=sex))
ggplot(data = data,aes(sex,charges,fill=sex)) +
geom_boxplot()
data <- data %>%
mutate(smoker = ifelse(smoker == "no", 0, 1))
# It is better to use 0/1 <-> Male/Female
data <- data %>%
mutate(sex = ifelse(sex == "male", 0, 1))
ggplot(data = data,aes(sex,charges,fill=sex)) +
geom_boxplot()
# Reading data from .csv
data = (
read.csv(
"https://raw.githubusercontent.com/dimamik/AGH_Statistics/master/End_Project/insurance.csv",
header = TRUE
)
)
ggplot(data = data,aes(sex,charges,fill=sex)) +
geom_boxplot()
ggplot( aes(x=age)) +
geom_density(fill="#69b3a2", color="#e9ecef", alpha=0.8)
ggplot(data=data, aes(age)) +
geom_density(fill="#69b3a2", color="#e9ecef", alpha=0.8)
ggplot(data=data, aes(smoker)) +
geom_density(fill="#69b3a2", color="#e9ecef", alpha=0.8)
ggplot(data=data, aes(bmi)) +
geom_density(fill="#69b3a2", color="#e9ecef", alpha=0.8)
ggplot(data=data, aes(children)) +
geom_density(fill="#69b3a2", color="#e9ecef", alpha=0.8)
ggplot(data=data, aes(children)) +
geom_histogram( binwidth=3, fill="#69b3a2", color="#e9ecef", alpha=0.9)
ggplot(data=data, aes(smoker)) +
geom_histogram( binwidth=3, fill="#69b3a2", color="#e9ecef", alpha=0.9)
ggplot(data=data,  stat=count(smoker)) +
geom_histogram( binwidth=3, fill="#69b3a2", color="#e9ecef", alpha=0.9)
ggplot(data=data,  stat=count(data)) +
geom_histogram( binwidth=3, fill="#69b3a2", color="#e9ecef", alpha=0.9)
ggplot(data=data, aes(smoker) stat=count(data)) +
geom_histogram( binwidth=3, fill="#69b3a2", color="#e9ecef", alpha=0.9)
ggplot(data=data, aes(smoker), stat=count(smoker)) +
geom_histogram()
ggplot(data=data, aes(smoker)) +
geom_histogram()
discrete.histogram (data, smoker, prob2=NULL, prob3=NULL)
discrete.histogram (data, smoker, prob2=NULL, prob3=NULL)
ggplot(data = data,aes(sex,charges,fill=sex)) +
geom_boxplot()
ggplot(data = data,aes(children,charges,fill=children)) +
geom_boxplot()
ggplot(data = data,aes(sex,charges,fill=sex)) +
geom_boxplot()
ggplot(data = data,aes(children,charges,fill=children)) +
geom_boxplot()
ggplot(data = data,aes(as.factor(children),charges,fill=children)) +
geom_boxplot()
ggplot(data = data,aes(as.factor(children),charges,fill=children)) +
geom_boxplot() + theme_classic()
ggplot(data = data,aes(as.factor(children),charges)) +
geom_boxplot(fill=c(2:7)) + theme_classic()
ggplot(data = data,aes(as.factor(children),charges)) +
geom_boxplot(fill=c(7:15)) + theme_classic()
ggplot(data = data,aes(as.factor(children),charges)) +
geom_boxplot(fill=c(7:9)) + theme_classic()
ggplot(data = data,aes(as.factor(children),charges)) +
geom_boxplot(fill=c(2:7)) + theme_classic()
ggplot(data = data,aes(as.factor(children),charges)) +
geom_boxplot(fill=c(2:7))
ggplot(data = data,aes(as.factor(children),charges)) +
geom_boxplot(fill=c(2:7)) + theme_classic()
ggplot(data = data,aes(as.factor(children),charges)) +
geom_boxplot(fill=c(2:7))
data
library(ggplot2)
library(ggthemes)
data = (
read.csv(
"https://raw.githubusercontent.com/dimamik/AGH_Statistics/master/End_Project/insurance.csv",
header = TRUE
)
)
ggplot(data = data,aes(as.factor(children),charges)) +
geom_boxplot(fill=c(2:7))
library(rstudioapi)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(psych)
library(relaimpo)
library(GGally)
library(tidyverse)
library(hrbrthemes)
library(viridis)
# Reading data from .csv
data = (
read.csv(
"https://raw.githubusercontent.com/dimamik/AGH_Statistics/master/End_Project/insurance.csv",
header = TRUE
)
)
# Discovering data structure
View(data)
names(data)
str(data)
summary(data)
# --------------------------------------------
# Cleaning the data and writing to new file
# Also we don't want to have Smoker as Yes/No, but 1/0
#data <- data %>%
#  mutate(smoker = ifelse(smoker == "no", 0, 1))
# It is better to use 0/1 <-> Male/Female
#data <- data %>%
#  mutate(sex = ifelse(sex == "male", 0, 1))
# We don't need a region
drops <- c("region")
data<-data[,!(names
(data) %in% drops)]
# Check for Nulls in Data
if (anyNA(data)){
print("Data is not valid")
}else{
print("Data is valid")
}
# Writing to new csv file
current_working_dir <- dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(current_working_dir)
write.csv(data,"./out/data.csv",row.names = FALSE)
ggpairs(data, title="correlogram with ggpairs()")
ggcorr(data, method = c("everything", "pearson"))
ggpairs(data, title="correlogram with ggpairs()")
ggcorr(data, method = c("everything", "pearson"))
ggplot(data = data,aes(smoker,charges,fill=smoker)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="black", size=0.4, alpha=0.9) +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("A boxplot with jitter") +
xlab("")
ggplot(data = data,aes(sex,charges,fill=sex)) +
geom_boxplot()
ggplot(data = data,aes(as.factor(children),charges)) +
geom_boxplot(fill=c(2:7))
ggplot(data=data, aes(age)) +
geom_density(fill="#69b3a2", color="#e9ecef", alpha=0.8)
ggplot(data=data, aes(bmi)) +
geom_density(fill="#69b3a2", color="#e9ecef", alpha=0.8)
discrete.histogram (data, smoker, prob2=NULL, prob3=NULL)
displot(data$sex)
install.packages('vcd')
library(vcd)
displot(data$sex)
distplot(data$sex)
distplot(sex)
distplot(data$HorseKicks, type = "poisson")
distplot(data, type = "poisson")
distplot(data, type = "nbinomial")
distplot(aes(data$age), type = "nbinomial")
distplot(aes(data$age,data$sex), type = "nbinomial")
distplot(data$smoker=='yes', type = "nbinomial")
sns.distplot(data$sex, hist = False)
distplot(data$sex, hist = False)
# (minimum, lower-hinge, median, upper-hinge, maximum)
fivenum(data)
# (minimum, lower-hinge, median, upper-hinge, maximum)
fivenum(data$age)
summary(data)
# Start with smoking
summary(data$smoker)
summary(data)
# Also we don't want to have Smoker as Yes/No, but 1/0
data <- data %>%
mutate(smoker = ifelse(smoker == "no", 0, 1))
# It is better to use 0/1 <-> Male/Female
data <- data %>%
mutate(sex = ifelse(sex == "male", 0, 1))
# Start with smoking
summary(data$smoker)
ggplot(data) +
geom_bar(mapping = aes(x = smoker))
# Reading data from .csv
data = (
read.csv(
"https://raw.githubusercontent.com/dimamik/AGH_Statistics/master/End_Project/insurance.csv",
header = TRUE
)
)
drops <- c("region")
data<-data[,!(names
(data) %in% drops)]
ggplot(data) +
geom_bar(mapping = aes(x = smoker))
ggplot(data = data,aes(smoker,charges,fill=smoker)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="black", size=0.4, alpha=0.9) +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("A boxplot with jitter") +
xlab("")
ggplot(aes(x=age, y = charges)) +
geom_point(aes(color = smoker, size = bmi, alpha = .05)) +
#four groups: smoker with high BMI, non-smoker with high BMI,
#smoker with low BMI and non-smoker with low BMI -->
#could indicate that there needs to be an interaction term between BMI and Smoker.
ggtitle("Charges vs Age")
ggplot(data,aes(x=age, y = charges)) +
geom_point(aes(color = smoker, size = bmi, alpha = .05)) +
#four groups: smoker with high BMI, non-smoker with high BMI,
#smoker with low BMI and non-smoker with low BMI -->
#could indicate that there needs to be an interaction term between BMI and Smoker.
ggtitle("Charges vs Age")
ggplot(data,aes(x=age, y = charges)) +
geom_point(aes(color = smoker, size = bmi, alpha = .02)) +
ggtitle("Charges vs Age")
ggplot(data,aes(x=age, y = charges)) +
geom_point(aes(color = smoker, size = bmi, alpha = .1)) +
ggtitle("Charges vs Age")
ggplot(data,aes(x=age, y = charges)) +
geom_point(aes(color = smoker, size = bmi, alpha = .004)) +
ggtitle("Charges vs Age")
ggplot(data,aes(x=age, y = charges)) +
geom_point(aes(color = smoker, size = bmi, alpha = .004)) +
ggtitle("Charges vs Age")
ggplot(data,aes(x=age, y = charges)) +
geom_point(aes(color = smoker, size = bmi, alpha = .04)) +
ggtitle("Charges vs Age")
ggplot(data,aes(x=age, y = charges)) +
geom_point(aes(color = smoker, size = bmi, alpha = .5)) +
ggtitle("Charges vs Age")
ggplot(data,aes(x=age, y = charges)) +
geom_point(aes(color = smoker, size = bmi, alpha = .05)) +
ggtitle("Charges vs Age")
ggplot(data,aes(x=age, y = charges)) +
geom_point(aes(color = smoker, size = bmi, alpha = .1)) +
ggtitle("Charges vs Age")
ggplot(data,aes(x=age, y = charges)) +
geom_point(aes(color = smoker, size = bmi, alpha = 1)) +
ggtitle("Charges vs Age")
ggplot(data,aes(x=age, y = charges)) +
geom_point(aes(color = smoker, size = bmi)) +
ggtitle("Charges vs Age")
ggplot(data,aes(x=age, y = charges)) +
geom_point(aes(color = smoker, size = bmi,shape = factor(cyl))) +
ggtitle("Charges vs Age")
geom_point(aes(color = smoker, size = bmi,aes(colour = factor(cyl))) +
geom_point(aes(color = smoker, size = bmi,aes(shape = factor(cyl))) +
ggplot(data,aes(x=age, y = charges)) +
geom_point(aes(color = smoker, size = bmi,aes(shape = factor(cyl))) +
ggtitle("Charges vs Age")
geom_point(aes(color = smoker, size = bmi) +
ggplot(data,aes(x=age, y = charges)) +
geom_point(aes(color = smoker, size = bmi) +
ggtitle("Charges vs Age")
ggplot(data = data,aes(smoker,charges,fill=smoker)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="black", size=0.4, alpha=0.9) +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("A boxplot with jitter") +
xlab("")
# Reading data from .csv
data = (
read.csv(
"https://raw.githubusercontent.com/dimamik/AGH_Statistics/master/End_Project/insurance.csv",
header = TRUE
)
)
ggplot(data,aes(x=age, y = charges)) +
geom_point(aes(color = smoker, size = bmi) +
ggtitle("Charges vs Age")
geom_point(aes(color = smoker, size = bmi,alpha=0.05) +
ggplot(data,aes(x=age, y = charges)) +
geom_point(aes(color = smoker, size = bmi,alpha=0.05) +
ggtitle("Charges vs Age")
